{"version":3,"file":"index.js","mappings":"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","sources":["webpack://@byted/zlib-wasm/webpack/bootstrap","webpack://@byted/zlib-wasm/./src/web/types.ts","webpack://@byted/zlib-wasm/./src/web/build/zlib-wasm.js","webpack://@byted/zlib-wasm/webpack/runtime/define property getters","webpack://@byted/zlib-wasm/webpack/runtime/hasOwnProperty shorthand","webpack://@byted/zlib-wasm/./src/web/util.ts","webpack://@byted/zlib-wasm/./src/web/zlib-wasm-module.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","export enum LoadState {\n  NOT_SUPPORT = 'NOT_SUPPORT',\n  LOADING = 'LOADING',\n  READY = 'READY',\n  ERROR = 'ERROR',\n  NOT_INIT = 'NOT_INIT',\n}\n\nexport type DeflateLevel = -1 | 0 | 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9;\n\nexport type Pointer = number;\n\n// zlib 定义的错误码\nexport enum ReturnCodes {\n  Z_OK = 0,\n  Z_STREAM_END = 1,\n  Z_NEED_DICT = 2,\n  Z_ERRNO = -1,\n  Z_STREAM_ERROR = -2,\n  Z_DATA_ERROR = -3,\n  Z_BUF_ERROR = -5,\n}\nexport interface BufferInflationResult<T> {\n  buffer: Uint8Array;\n  result: T;\n}\nexport type BufferInflationMethod = <T>(base64Content: string) => BufferInflationResult<T>;\nexport type InflationMethod = (base64Content: string) => string;\nexport type Base64ToBufferMethod = (base64Str: string) => Uint8Array;\nexport type BufferToContentMethod = <T>(buffer: Uint8Array) => T;\nexport interface InflationUtils {\n  inflationMethod: InflationMethod;\n  bufferInflationMethod: BufferInflationMethod;\n}\n\nexport interface ZlibWasmOptions {\n  debug?: boolean;\n}\n\nexport enum TimeRecordLabel {\n    BASE64 = 'BASE64',\n    WASM_UNGZIP = 'wasm_ungzip',\n    PAKO_UNGZIP = 'pako_ungzip',\n    WASM_GZIP = 'wasm_gzip',\n    PAKO_GZIP = 'pako_gzip',\n}\n\nexport type TimeRecordMaps = {\n    [key in TimeRecordLabel]: number;\n}\n\nexport interface InstaceExports extends WebAssembly.Exports {\n  _free: (ptr: Pointer) => void;\n  _malloc: (size: number) => Pointer;\n  _base64_decode: (inputPtr: Pointer, inputLen: number, outLen: number) => Pointer;\n  _base64_decode2: (inputPtr: Pointer, inputLen: number, outPtr: Pointer, outLen: number) => Pointer;\n  _base64_encode: (inputPtr: Pointer, inputLen: number, outLen: number) => Pointer;\n  _base64_encode2: (inputPtr: Pointer, inputLen: number, outPtr: Pointer, outLen: number) => Pointer;\n  _uncompress_gzip: (inputPtr: Pointer, inputLen: number, outPtr: Pointer, outLen: number) => ReturnCodes;\n  _compress_bound: (size: number) => number;\n  _compress_gzip: (inputPtr: Pointer, inputLen: number, outPtr: Pointer, outLen: number, level: DeflateLevel) => ReturnCodes;\n  _abort: () => void;\n  _grow: () => void;\n}\n\nexport interface ITextToBufferEncoder {\n  encode(text: string): Uint8Array;\n}\n\nexport interface IBufferToTextDecoder {\n  decode(buffer: Uint8Array): string;\n}\n","\nvar Module = (() => {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  \n  return (\nfunction(Module = {})  {\n\nvar Module=typeof Module!=\"undefined\"?Module:{};var readyPromiseResolve,readyPromiseReject;Module[\"ready\"]=new Promise((resolve,reject)=>{readyPromiseResolve=resolve;readyPromiseReject=reject});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram=\"./this.program\";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=true;var ENVIRONMENT_IS_WORKER=false;var scriptDirectory=\"\";function locateFile(path){if(Module[\"locateFile\"]){return Module[\"locateFile\"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href}else if(typeof document!=\"undefined\"&&document.currentScript){scriptDirectory=document.currentScript.src}if(_scriptDir){scriptDirectory=_scriptDir}if(scriptDirectory.indexOf(\"blob:\")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,\"\").lastIndexOf(\"/\")+1)}else{scriptDirectory=\"\"}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,false);xhr.responseType=\"arraybuffer\";xhr.send(null);return new Uint8Array(xhr.response)}}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open(\"GET\",url,true);xhr.responseType=\"arraybuffer\";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror()};xhr.onerror=onerror;xhr.send(null)}}setWindowTitle=title=>document.title=title}else{}var out=Module[\"print\"]||console.log.bind(console);var err=Module[\"printErr\"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module[\"arguments\"])arguments_=Module[\"arguments\"];if(Module[\"thisProgram\"])thisProgram=Module[\"thisProgram\"];if(Module[\"quit\"])quit_=Module[\"quit\"];var wasmBinary;if(Module[\"wasmBinary\"])wasmBinary=Module[\"wasmBinary\"];var noExitRuntime=Module[\"noExitRuntime\"]||true;if(typeof WebAssembly!=\"object\"){abort(\"no native wasm support detected\")}var wasmMemory;var ABORT=false;var EXITSTATUS;var HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateMemoryViews(){var b=wasmMemory.buffer;Module[\"HEAP8\"]=HEAP8=new Int8Array(b);Module[\"HEAP16\"]=HEAP16=new Int16Array(b);Module[\"HEAP32\"]=HEAP32=new Int32Array(b);Module[\"HEAPU8\"]=HEAPU8=new Uint8Array(b);Module[\"HEAPU16\"]=HEAPU16=new Uint16Array(b);Module[\"HEAPU32\"]=HEAPU32=new Uint32Array(b);Module[\"HEAPF32\"]=HEAPF32=new Float32Array(b);Module[\"HEAPF64\"]=HEAPF64=new Float64Array(b)}var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function preRun(){if(Module[\"preRun\"]){if(typeof Module[\"preRun\"]==\"function\")Module[\"preRun\"]=[Module[\"preRun\"]];while(Module[\"preRun\"].length){addOnPreRun(Module[\"preRun\"].shift())}}callRuntimeCallbacks(__ATPRERUN__)}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__)}function postRun(){if(Module[\"postRun\"]){if(typeof Module[\"postRun\"]==\"function\")Module[\"postRun\"]=[Module[\"postRun\"]];while(Module[\"postRun\"].length){addOnPostRun(Module[\"postRun\"].shift())}}callRuntimeCallbacks(__ATPOSTRUN__)}function addOnPreRun(cb){__ATPRERUN__.unshift(cb)}function addOnInit(cb){__ATINIT__.unshift(cb)}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb)}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}}function removeRunDependency(id){runDependencies--;if(Module[\"monitorRunDependencies\"]){Module[\"monitorRunDependencies\"](runDependencies)}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback()}}}function abort(what){if(Module[\"onAbort\"]){Module[\"onAbort\"](what)}what=\"Aborted(\"+what+\")\";err(what);ABORT=true;EXITSTATUS=1;what+=\". Build with -sASSERTIONS for more info.\";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var dataURIPrefix=\"data:application/octet-stream;base64,\";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}var wasmBinaryFile;wasmBinaryFile=\"zlib-wasm.wasm\";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile)}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw\"both async and sync fetching of the wasm failed\"}catch(err){abort(err)}}function getBinaryPromise(binaryFile){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{if(!response[\"ok\"]){throw\"failed to load wasm binary file at '\"+binaryFile+\"'\"}return response[\"arrayBuffer\"]()}).catch(()=>getBinary(binaryFile))}}return Promise.resolve().then(()=>getBinary(binaryFile))}function instantiateArrayBuffer(binaryFile,imports,receiver){return getBinaryPromise(binaryFile).then(binary=>{return WebAssembly.instantiate(binary,imports)}).then(instance=>{return instance}).then(receiver,reason=>{err(\"failed to asynchronously prepare wasm: \"+reason);abort(reason)})}function instantiateAsync(binary,binaryFile,imports,callback){if(!binary&&typeof WebAssembly.instantiateStreaming==\"function\"&&!isDataURI(binaryFile)&&typeof fetch==\"function\"){return fetch(binaryFile,{credentials:\"same-origin\"}).then(response=>{var result=WebAssembly.instantiateStreaming(response,imports);return result.then(callback,function(reason){err(\"wasm streaming compile failed: \"+reason);err(\"falling back to ArrayBuffer instantiation\");return instantiateArrayBuffer(binaryFile,imports,callback)})})}else{return instantiateArrayBuffer(binaryFile,imports,callback)}}function createWasm(){var info={\"a\":wasmImports};function receiveInstance(instance,module){var exports=instance.exports;Module[\"asm\"]=exports;wasmMemory=Module[\"asm\"][\"d\"];updateMemoryViews();wasmTable=Module[\"asm\"][\"k\"];addOnInit(Module[\"asm\"][\"e\"]);removeRunDependency(\"wasm-instantiate\");return exports}addRunDependency(\"wasm-instantiate\");function receiveInstantiationResult(result){receiveInstance(result[\"instance\"])}if(Module[\"instantiateWasm\"]){try{return Module[\"instantiateWasm\"](info,receiveInstance)}catch(e){err(\"Module.instantiateWasm callback failed with error: \"+e);readyPromiseReject(e)}}instantiateAsync(wasmBinary,wasmBinaryFile,info,receiveInstantiationResult).catch(readyPromiseReject);return{}}var tempDouble;var tempI64;function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module)}}function getValue(ptr,type=\"i8\"){if(type.endsWith(\"*\"))type=\"*\";switch(type){case\"i1\":return HEAP8[ptr>>0];case\"i8\":return HEAP8[ptr>>0];case\"i16\":return HEAP16[ptr>>1];case\"i32\":return HEAP32[ptr>>2];case\"i64\":return HEAP32[ptr>>2];case\"float\":return HEAPF32[ptr>>2];case\"double\":return HEAPF64[ptr>>3];case\"*\":return HEAPU32[ptr>>2];default:abort(\"invalid type for getValue: \"+type)}}function setValue(ptr,value,type=\"i8\"){if(type.endsWith(\"*\"))type=\"*\";switch(type){case\"i1\":HEAP8[ptr>>0]=value;break;case\"i8\":HEAP8[ptr>>0]=value;break;case\"i16\":HEAP16[ptr>>1]=value;break;case\"i32\":HEAP32[ptr>>2]=value;break;case\"i64\":tempI64=[value>>>0,(tempDouble=value,+Math.abs(tempDouble)>=1?tempDouble>0?+Math.floor(tempDouble/4294967296)>>>0:~~+Math.ceil((tempDouble-+(~~tempDouble>>>0))/4294967296)>>>0:0)],HEAP32[ptr>>2]=tempI64[0],HEAP32[ptr+4>>2]=tempI64[1];break;case\"float\":HEAPF32[ptr>>2]=value;break;case\"double\":HEAPF64[ptr>>3]=value;break;case\"*\":HEAPU32[ptr>>2]=value;break;default:abort(\"invalid type for setValue: \"+type)}}function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num)}function getHeapMax(){return 2147483648}function emscripten_realloc_buffer(size){var b=wasmMemory.buffer;try{wasmMemory.grow(size-b.byteLength+65535>>>16);updateMemoryViews();return 1}catch(e){}}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;var maxHeapSize=getHeapMax();if(requestedSize>maxHeapSize){return false}var alignUp=(x,multiple)=>x+(multiple-x%multiple)%multiple;for(var cutDown=1;cutDown<=4;cutDown*=2){var overGrownHeapSize=oldSize*(1+.2/cutDown);overGrownHeapSize=Math.min(overGrownHeapSize,requestedSize+100663296);var newSize=Math.min(maxHeapSize,alignUp(Math.max(requestedSize,overGrownHeapSize),65536));var replacement=emscripten_realloc_buffer(newSize);if(replacement){return true}}return false}var printCharBuffers=[null,[],[]];var UTF8Decoder=typeof TextDecoder!=\"undefined\"?new TextDecoder(\"utf8\"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str=\"\";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2}else{u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63}if(u0<65536){str+=String.fromCharCode(u0)}else{var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023)}}return str}function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0}else{buffer.push(curr)}}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):\"\"}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j])}num+=len}HEAPU32[pnum>>2]=num;return 0}function stringToUTF8Array(str,heap,outIdx,maxBytesToWrite){if(!(maxBytesToWrite>0))return 0;var startIdx=outIdx;var endIdx=outIdx+maxBytesToWrite-1;for(var i=0;i<str.length;++i){var u=str.charCodeAt(i);if(u>=55296&&u<=57343){var u1=str.charCodeAt(++i);u=65536+((u&1023)<<10)|u1&1023}if(u<=127){if(outIdx>=endIdx)break;heap[outIdx++]=u}else if(u<=2047){if(outIdx+1>=endIdx)break;heap[outIdx++]=192|u>>6;heap[outIdx++]=128|u&63}else if(u<=65535){if(outIdx+2>=endIdx)break;heap[outIdx++]=224|u>>12;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}else{if(outIdx+3>=endIdx)break;heap[outIdx++]=240|u>>18;heap[outIdx++]=128|u>>12&63;heap[outIdx++]=128|u>>6&63;heap[outIdx++]=128|u&63}}heap[outIdx]=0;return outIdx-startIdx}function stringToUTF8(str,outPtr,maxBytesToWrite){return stringToUTF8Array(str,HEAPU8,outPtr,maxBytesToWrite)}var wasmImports={\"c\":_emscripten_memcpy_big,\"b\":_emscripten_resize_heap,\"a\":_fd_write};var asm=createWasm();var ___wasm_call_ctors=function(){return(___wasm_call_ctors=Module[\"asm\"][\"e\"]).apply(null,arguments)};var _getCompressedDataPtr=Module[\"_getCompressedDataPtr\"]=function(){return(_getCompressedDataPtr=Module[\"_getCompressedDataPtr\"]=Module[\"asm\"][\"f\"]).apply(null,arguments)};var _unGzipBase64Content=Module[\"_unGzipBase64Content\"]=function(){return(_unGzipBase64Content=Module[\"_unGzipBase64Content\"]=Module[\"asm\"][\"g\"]).apply(null,arguments)};var _mallocMemory=Module[\"_mallocMemory\"]=function(){return(_mallocMemory=Module[\"_mallocMemory\"]=Module[\"asm\"][\"h\"]).apply(null,arguments)};var _freeMemory=Module[\"_freeMemory\"]=function(){return(_freeMemory=Module[\"_freeMemory\"]=Module[\"asm\"][\"i\"]).apply(null,arguments)};var _getI32Value=Module[\"_getI32Value\"]=function(){return(_getI32Value=Module[\"_getI32Value\"]=Module[\"asm\"][\"j\"]).apply(null,arguments)};var ___errno_location=function(){return(___errno_location=Module[\"asm\"][\"__errno_location\"]).apply(null,arguments)};Module[\"setValue\"]=setValue;Module[\"getValue\"]=getValue;Module[\"UTF8ArrayToString\"]=UTF8ArrayToString;Module[\"UTF8ToString\"]=UTF8ToString;Module[\"stringToUTF8Array\"]=stringToUTF8Array;Module[\"stringToUTF8\"]=stringToUTF8;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller};function run(){if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module[\"calledRun\"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module[\"onRuntimeInitialized\"])Module[\"onRuntimeInitialized\"]();postRun()}if(Module[\"setStatus\"]){Module[\"setStatus\"](\"Running...\");setTimeout(function(){setTimeout(function(){Module[\"setStatus\"](\"\")},1);doRun()},1)}else{doRun()}}if(Module[\"preInit\"]){if(typeof Module[\"preInit\"]==\"function\")Module[\"preInit\"]=[Module[\"preInit\"]];while(Module[\"preInit\"].length>0){Module[\"preInit\"].pop()()}}run();\n\n\n  return Module.ready\n}\n\n);\n})();\nexport default Module;","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","\n/**\n * 判断是否是空指针，如果是空指针，则说明内存分配失败\n * @param ptr 指针\n */\nexport function isNULLPtr(ptr: number): boolean {\n  return ptr === 0;\n}\n\n/**\n *  判断是否是原生方法\n * @param Ctor Webassembly & TextEncoder\n */\nexport function isNative(Ctor) {\n  return typeof Ctor === 'function' && /native code/.test(Ctor.toString())\n}\n\n/**\n * 在worker 或 node 环境中不支持\n */\nexport function isWebview(): boolean {\n  return typeof window === 'object';\n}\n\n/**\n * 获取比 x 大的且能被 y 整除的最小数\n * @param x 被除数\n * @param y 除数\n */\nexport function getMinDivisionNumber(x: number, y: number) {\n  const reset = x % y;\n  return reset ? x + y - reset : x;\n}\n\nexport const INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nexport function base64clean(str: string): string {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\n/**\n *\n * @param str input string\n * @param heap arrayBuffer\n * @param outIdx start point\n * @param maxBytesToWrite memory to write\n */\nexport function stringToUTF8Array(str: string, heap: ArrayBuffer, outIdx: number, maxBytesToWrite: number) {\n  if (!(maxBytesToWrite > 0)) return 0;\n  var startIdx = outIdx;\n  var endIdx = outIdx + maxBytesToWrite - 1;\n  for (var i = 0; i < str.length; ++i) {\n    var u = str.charCodeAt(i);\n    if (u >= 55296 && u <= 57343) {\n      var u1 = str.charCodeAt(++i);\n      u = 65536 + ((u & 1023) << 10) | u1 & 1023\n    }\n    if (u <= 127) {\n      if (outIdx >= endIdx) break;\n      heap[outIdx++] = u\n    } else if (u <= 2047) {\n      if (outIdx + 1 >= endIdx) break;\n      heap[outIdx++] = 192 | u >> 6;\n      heap[outIdx++] = 128 | u & 63\n    } else if (u <= 65535) {\n      if (outIdx + 2 >= endIdx) break;\n      heap[outIdx++] = 224 | u >> 12;\n      heap[outIdx++] = 128 | u >> 6 & 63;\n      heap[outIdx++] = 128 | u & 63\n    } else {\n      if (outIdx + 3 >= endIdx) break;\n      heap[outIdx++] = 240 | u >> 18;\n      heap[outIdx++] = 128 | u >> 12 & 63;\n      heap[outIdx++] = 128 | u >> 6 & 63;\n      heap[outIdx++] = 128 | u & 63\n    }\n  }\n  heap[outIdx] = 0;\n  return outIdx - startIdx\n}\n\nexport function UTF8ArrayToString(heapOrArray, idx, maxBytesToRead, decoder) {\n  var endIdx = idx + maxBytesToRead;\n  var endPtr = idx;\n  while (heapOrArray[endPtr] && !(endPtr >= endIdx)) ++endPtr;\n  if (endPtr - idx > 16 && heapOrArray.buffer && decoder) {\n    return decoder.decode(heapOrArray.subarray(idx, endPtr))\n  }\n  var str = '';\n  while (idx < endPtr) {\n    var u0 = heapOrArray[idx++];\n    if (!(u0 & 128)) {\n      str += String.fromCharCode(u0);\n      continue\n    }\n    var u1 = heapOrArray[idx++] & 63;\n    if ((u0 & 224) == 192) {\n      str += String.fromCharCode((u0 & 31) << 6 | u1);\n      continue\n    }\n    var u2 = heapOrArray[idx++] & 63;\n    if ((u0 & 240) == 224) {\n      u0 = (u0 & 15) << 12 | u1 << 6 | u2\n    } else {\n      u0 = (u0 & 7) << 18 | u1 << 12 | u2 << 6 | heapOrArray[idx++] & 63\n    }\n    if (u0 < 65536) {\n      str += String.fromCharCode(u0)\n    } else {\n      var ch = u0 - 65536;\n      str += String.fromCharCode(55296 | ch >> 10, 56320 | ch & 1023)\n    }\n  }\n  return str\n}\n\nexport function writeUint8Byte(targetBuffer: Uint8Array, sourceBuffer: Uint8Array, start: number) {\n  for (let i = 0, len = sourceBuffer.length; i < len; i++) {\n    targetBuffer[start + i] = sourceBuffer[i];\n  }\n}\n\nexport function writeNumberToByte(number: number, uint8Array: Uint8Array, offset: number) {\n  for (let i = 0; i < 4; i++) {\n    uint8Array[offset + i] = (number >> (i * 8)) & 0xFF;\n  }\n}\n\nexport function isNativeTextToBufferEnable() {\n  return isWebview() && isNative(window.TextEncoder);\n}\n\nexport function isNativeBufferToTextEnable() {\n  return isWebview() && isNative(window.TextDecoder);\n}\n","import zlibInitMethod from './build/zlib-wasm.js';\nimport zlibWasm from './build/zlib-wasm.wasm';\nimport {\n  BufferInflationResult,\n  IBufferToTextDecoder,\n  InflationUtils,\n  ITextToBufferEncoder,\n  LoadState,\n  Pointer,\n  ZlibWasmOptions,\n} from './types';\nimport { isNative, isWebview, writeNumberToByte, writeUint8Byte } from './util';\n\n// const DEFAULT_COMPRESSION_LEVEL = 9;\n// const DEFAULT_INITIAL_MEMORY_PAGES = 10;\n\nexport interface IZlibWasmModuleAPI {\n  _mallocMemory(size: number): Pointer;\n\n  _freeMemory(ptr: Pointer): void;\n\n  _unGzipBase64Content(\n    inputBufferPtr: Pointer,\n    inputLength: number,\n    base64InputPtr: Pointer,\n    base64OutputLengthPtr: Pointer,\n    outLengthPtr: Pointer,\n  ): number;\n\n  _getCompressedDataPtr(): Pointer;\n\n  _getI32Value(ptr: Pointer): number;\n}\n\nexport interface ZlibWasmModuleExports extends WebAssembly.Exports, IZlibWasmModuleAPI {\n\n}\n\n// 用几字节来保存 length 的值\nexport const LENGTH_BUFFER_SIZE: number = 4;\n\nexport interface IZlibWasmModuleOptions extends ZlibWasmOptions {\n  /**\n   * fall back inflation methods\n   */\n  inflationUtils: InflationUtils;\n\n  encoder: ITextToBufferEncoder;\n\n  decoder: IBufferToTextDecoder;\n}\n\n/**\n * 胶水代码模块的 API\n */\nexport interface IGlueModule extends IZlibWasmModuleAPI {\n  ready: Promise<IGlueModule>;\n  HEAPU8: Uint8Array;\n\n  onAbort?(what: string): void;\n\n  locateFile?(file: string): string;\n\n  getValue(ptr: Pointer, type: 'i1' | 'i8' | 'i16' | 'i32' | 'i64' | 'float' | 'double' | '*'): number;\n\n  UTF8ToString(ptr: Pointer, len: number): string;\n}\n\nexport class ZlibWasmModule {\n\n  private glueModule: IGlueModule;\n\n  // 加载状态\n  private loadState: LoadState = LoadState.NOT_INIT;\n\n  // 将 base64 字符编译为 ArrayBuffer，默认是 window.TextEncoder\n  private encoder: ITextToBufferEncoder;\n  // 将 ArrayBuffer 转化为字符，默认是 window.TextDecoder\n  private decoder: IBufferToTextDecoder;\n\n  private inflationUtils: InflationUtils;\n  private wasmModuleExports: ZlibWasmModuleExports;\n\n  constructor(options: IZlibWasmModuleOptions) {\n    const { debug = false, inflationUtils, encoder, decoder } = options;\n\n    this.inflationUtils = inflationUtils;\n    this.encoder = encoder;\n    this.decoder = decoder;\n\n    if (ZlibWasmModule.isSupportWasm()) {\n      this.loadState = LoadState.LOADING;\n      this.init();\n    } else {\n      console.warn('[zlib-wasm] wasm not support');\n      this.loadState = LoadState.NOT_SUPPORT;\n    }\n  }\n\n  public loadedPromise: Promise<ZlibWasmModuleExports>;\n\n  /**\n   * 判断兼容性\n   */\n  static isSupportWasm(): boolean {\n    return isWebview() && window.WebAssembly && isNative(window.WebAssembly.compile);\n  }\n\n  private async init() {\n    // const wasmBinary = this.encoder.encode(zlibWasm);\n    // const wasmBinary = Buffer.from(zlibWasm, 'base64');\n    // const wasmBinary = await import('./build/zlib-wasm.wasm') as any;\n    this.glueModule = {\n      // wasmBinary,\n      locateFile: () => {\n        // return 'zlib-wasm.wasm';\n        return zlibWasm;\n      },\n      onAbort: () => {\n        this.loadState = LoadState.ERROR;\n      },\n      onRuntimeInitialized: () => {\n        this.loadState = LoadState.READY;\n        this.wasmModuleExports = {\n          // 这个 g 开始，其实是 C 源码从上到下的顺序\n          _getCompressedDataPtr: this.glueModule['asm']['f'],\n          _unGzipBase64Content: this.glueModule['asm']['g'],\n          _mallocMemory: this.glueModule['asm']['h'],\n          _freeMemory: this.glueModule['asm']['i'],\n          _getI32Value: this.glueModule['asm']['j'],\n        };\n      },\n    } as any;\n\n    this.loadedPromise = zlibInitMethod(this.glueModule);\n\n  }\n\n  /**\n   * 解压 base64Text, 得到解压后 decoder.decode 的字符串\n   * @param base64Text\n   */\n  unGzipRaw(base64Text: string): string {\n    if (!this.isReady()) {\n      return this.inflationUtils.inflationMethod(base64Text);\n    }\n\n    // 将text转换为 ArrayBuffer\n    const inputBuffer = this.encoder.encode(base64Text);\n    const inputBufferLength = inputBuffer.length;\n\n    const inputBufferPtr = this.wasmModuleExports._mallocMemory(inputBufferLength);\n    writeUint8Byte(this.glueModule.HEAPU8, inputBuffer, inputBufferPtr);\n\n    const base64OutLength = Math.floor((inputBufferLength + 2) * 3 / 4) + 1;\n    const base64OutLengthPtr = this.wasmModuleExports._mallocMemory(LENGTH_BUFFER_SIZE);\n    writeNumberToByte(base64OutLength, this.glueModule.HEAPU8, base64OutLengthPtr);\n\n    const base64InputPtr = this.wasmModuleExports._mallocMemory(base64OutLength);\n\n    const outLengthPtr = this.wasmModuleExports._mallocMemory(LENGTH_BUFFER_SIZE);\n    const unGzipRet = this.wasmModuleExports._unGzipBase64Content(\n      inputBufferPtr,\n      inputBufferLength,\n      base64InputPtr,\n      base64OutLengthPtr,\n      outLengthPtr,\n    );\n\n    if (unGzipRet !== 0) {\n      return this.inflationUtils.inflationMethod(base64Text);\n    }\n\n    const outputPtr = this.wasmModuleExports._getCompressedDataPtr();\n\n    // read unGzip result form heap\n    const retString = this.decoder.decode(this.glueModule.HEAPU8.subarray(outputPtr, outputPtr + this.wasmModuleExports._getI32Value(outLengthPtr)));\n\n    // release heap pointer\n    this.wasmModuleExports._freeMemory(inputBufferPtr);\n    this.wasmModuleExports._freeMemory(base64InputPtr)\n    this.wasmModuleExports._freeMemory(base64OutLengthPtr);\n    this.wasmModuleExports._freeMemory(outLengthPtr);\n    // 不可以 free outputPtr，因为内部会自己 free，否则 double free 会 oom\n    // this.wasmModuleExports._freeMemory(outputPtr);\n\n    return retString;\n\n  }\n\n  /**\n   * 解压 base64Text, 得到解压后 decoder.decode 的 JSON 数据\n   * @param base64Text\n   */\n  unGzip<T>(base64Text: string): BufferInflationResult<T> {\n    if (!this.isReady()) {\n      return this.inflationUtils.bufferInflationMethod<T>(base64Text);\n    }\n\n    // 将text转换为 ArrayBuffer\n    const inputBuffer = this.encoder.encode(base64Text);\n    const inputBufferLength = inputBuffer.length;\n\n    const inputBufferPtr = this.wasmModuleExports._mallocMemory(inputBufferLength);\n    writeUint8Byte(this.glueModule.HEAPU8, inputBuffer, inputBufferPtr);\n\n    const base64OutLength = Math.floor((inputBufferLength + 2) * 3 / 4) + 1;\n    const base64OutLengthPtr = this.wasmModuleExports._mallocMemory(LENGTH_BUFFER_SIZE);\n    writeNumberToByte(base64OutLength, this.glueModule.HEAPU8, base64OutLengthPtr);\n\n    const base64InputPtr = this.wasmModuleExports._mallocMemory(base64OutLength);\n\n    const outLengthPtr = this.wasmModuleExports._mallocMemory(LENGTH_BUFFER_SIZE);\n    const unGzipRet = this.wasmModuleExports._unGzipBase64Content(\n      inputBufferPtr,\n      inputBufferLength,\n      base64InputPtr,\n      base64OutLengthPtr,\n      outLengthPtr,\n    );\n\n    if (unGzipRet !== 0) {\n      return this.inflationUtils.bufferInflationMethod<T>(base64Text);\n    }\n\n    const outputPtr = this.wasmModuleExports._getCompressedDataPtr();\n\n    // read unGzip result form heap\n    const retString = this.decoder.decode(this.glueModule.HEAPU8.subarray(outputPtr, outputPtr + this.wasmModuleExports._getI32Value(outLengthPtr)));\n    const base64DecodeBuffer = this.glueModule.HEAPU8.slice(base64OutLengthPtr, base64OutLengthPtr + this.wasmModuleExports._getI32Value(base64OutLengthPtr));\n\n    // release heap pointer\n    this.wasmModuleExports._freeMemory(inputBufferPtr);\n    this.wasmModuleExports._freeMemory(base64InputPtr)\n    this.wasmModuleExports._freeMemory(base64OutLengthPtr);\n    this.wasmModuleExports._freeMemory(outLengthPtr);\n    // 不可以 free outputPtr，因为内部会自己 free，否则 double free 会 oom\n    // this.wasmModuleExports._freeMemory(outputPtr);\n\n    return {\n      buffer: base64DecodeBuffer,\n      result: JSON.parse(retString) as T,\n    };\n  }\n\n  isReady() {\n    return this.loadState === LoadState.READY;\n  }\n\n}\n"],"names":["LoadState","ReturnCodes","TimeRecordLabel","_scriptDir","__webpack_require__","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","document","currentScript","src","undefined","Module","readyPromiseResolve","readyPromiseReject","Promise","resolve","reject","readBinary","moduleOverrides","assign","scriptDirectory","indexOf","substr","replace","lastIndexOf","wasmBinary","wasmMemory","out","console","log","bind","err","warn","WebAssembly","abort","HEAP8","HEAPU8","HEAP16","HEAP32","HEAPU32","HEAPF32","HEAPF64","ABORT","updateMemoryViews","b","buffer","Int8Array","Int16Array","Int32Array","Uint8Array","Uint16Array","Uint32Array","Float32Array","Float64Array","__ATPRERUN__","__ATINIT__","__ATPOSTRUN__","runDependencies","runDependencyWatcher","dependenciesFulfilled","what","e","RuntimeError","wasmBinaryFile","path","tempDouble","tempI64","isDataURI","filename","startsWith","getBinary","file","instantiateArrayBuffer","binaryFile","imports","receiver","fetch","then","credentials","response","catch","getBinaryPromise","binary","instantiate","instance","reason","callRuntimeCallbacks","callbacks","length","shift","emscripten_realloc_buffer","size","grow","byteLength","printCharBuffers","UTF8Decoder","TextDecoder","UTF8ArrayToString","heapOrArray","idx","maxBytesToRead","endIdx","endPtr","decode","subarray","str","u0","u1","u2","String","fromCharCode","ch","stringToUTF8Array","heap","outIdx","maxBytesToWrite","startIdx","i","u","charCodeAt","calledRun","wasmImports","dest","num","copyWithin","requestedSize","oldSize","maxHeapSize","x","cutDown","overGrownHeapSize","Math","min","max","fd","iov","iovcnt","pnum","stream","curr","ptr","len","j","push","run","doRun","cb","unshift","postRun","preRun","setTimeout","callback","info","receiveInstance","module","id","clearInterval","removeRunDependency","result","instantiateStreaming","createWasm","apply","arguments","value","type","endsWith","abs","floor","ceil","outPtr","runCaller","pop","ready","writeUint8Byte","targetBuffer","sourceBuffer","start","writeNumberToByte","number","uint8Array","offset","LENGTH_BUFFER_SIZE","options","loadState","NOT_INIT","inflationUtils","encoder","decoder","this","ZlibWasmModule","isSupportWasm","LOADING","init","NOT_SUPPORT","window","Ctor","compile","test","toString","glueModule","locateFile","onAbort","ERROR","onRuntimeInitialized","READY","wasmModuleExports","_getCompressedDataPtr","_unGzipBase64Content","_mallocMemory","_freeMemory","_getI32Value","loadedPromise","unGzipRaw","base64Text","isReady","inflationMethod","inputBuffer","encode","inputBufferLength","inputBufferPtr","base64OutLength","base64OutLengthPtr","base64InputPtr","outLengthPtr","outputPtr","retString","unGzip","bufferInflationMethod","base64DecodeBuffer","slice","JSON","parse"],"sourceRoot":""}